%{
#include <stdio.h>
int comment_count = 0; // For counting comment lines
%}

%%
"//".* { printf("Single-line comment: %s\n", yytext); comment_count++; } // Matches single-line comments
"/\\*([^*]|\\*+[^*/])*\\*+/" { printf("Multi-line comment: %s\n", yytext); comment_count++; } // Matches multi-line comments
\n { /* Ignore new lines */ }
.|\n { /* Ignore other characters */ }
%%

int main(int argc, char **argv) {
    if (argc < 2) {
        printf("Usage: %s <source-file>\n", argv[0]);
        return 1;
    }
    FILE *file = fopen(argv[1], "r");
    if (!file) {
        perror("Unable to open file");
        return 1;
    }
    yyin = file;
    yylex(); // Begin lexical analysis
    fclose(file);
    printf("Number of comment lines: %d\n", comment_count);
    return 0;
}

int yywrap() { return 1; }
